from typing import List, TypedDict
import requests
import os

database_id = os.getenv("79c9ff80e1eb484c876d821a7d830f68") # 读书笔记对应到数据库id
notion_version = os.getenv("notion_version", "2022-02-22") # 固定参数
token = os.getenv("secret_Blobuu4OsRkiJvHDzydzYic7odqHwWrmFVA8NAU5Glt") # 自己的integrations的token

if not all([database_id, token]):
    raise ValueError("neither token or database id can't be none")

notion_headers = {
    'Authorization': f'Bearer {token}',
    'Content-Type': 'application/json',
    'Notion-Version': notion_version
}


class EmptyCoverPage(TypedDict):
    page_id: str
    book_name: str


def _get_image_from_douban(book_name: str) -> str:
    resp = requests.get(
        f'https://book.douban.com/j/subject_suggest?q={book_name}', headers={"User-Agent": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"})
    if resp.status_code != 200 or not resp.json():
        return
    resp_json = resp.json()
    return resp_json[0]["pic"]


def _get_pages_with_empty_cover(database_id: str) -> List[EmptyCoverPage]:
    url = f"https://api.notion.com/v1/databases/{database_id}/query"
    payload = {
        "filter": {
            "property": "封面图", # 封面列的名称
            "files": {
                "is_empty": True
            }
        }
    }
    resp = requests.post(url, json=payload, headers=notion_headers)
    if resp.status_code != 200:
        return []
    resp_json = resp.json()
    return [EmptyCoverPage(page_id=item["id"], book_name=item["properties"]["书名"]["title"][0]["text"]["content"]) for item in resp_json["results"]]


def _set_cover(cover: str, page_id: str):
    url = f"https://api.notion.com/v1/pages/{page_id}"
    payload = {
        "properties": {
            "封面图": {
                "files": [{
                    "name": cover,
                    "type": "external",
                    "external": {
                        "url": cover
                    }
                }]
            }
        }
    }
    resp = requests.patch(url, json=payload, headers=notion_headers)
    return resp.status_code == 200


def sync_covers_to_book():
    pages_with_empty_cover = _get_pages_with_empty_cover(database_id)
    print(f'当前有{len(pages_with_empty_cover)}本书没有设置封面')
    for page in pages_with_empty_cover:
        book_name = page["book_name"]
        cover = _get_image_from_douban(page["book_name"])
        if cover:
            print(f'成功获取到{book_name}的封面')
            if _set_cover(cover, page["page_id"]):
                print(f'成功设置{book_name}封面')
            else:
                print(f'设置{book_name}封面失败')
        else:
            print(f'未获取到{book_name}的封面')


if __name__ == '__main__':
    sync_covers_to_book()
